def selectupper expr t =
  currenttitle:= t;
  if t = "The letter C" : 
	code_offset := Cigmalunate - ASCII"C"; let next_ = use_it_
  elseif t = "The letter D" : let next_ = lose_it_
  elseif t = "The letter F" :
	code_offset := Digamma - ASCII"F"; let next_ = use_it_
  elseif t = "The letter G" : let next_ = lose_it_
  elseif t = "The letter J" : let next_ = lose_it_
  elseif t = "The letter L" : let next_ = lose_it_
  elseif t = "The letter Q" : let next_ = lose_it_
  elseif t = "The letter R" : let next_ = lose_it_
  elseif t = "The letter S" : let next_ = lose_it_
  elseif t = "The letter U" : let next_ = lose_it_
  elseif t = "The letter V" : let next_ = lose_it_
  elseif t = "The letter W" : let next_ = lose_it_
  elseif t = "The letter Y" : let next_ = lose_it_
  elseif t = "The letter P" : 
	code_offset := ASCII"R" - ASCII"P"; let next_ = use_it_
  else: code_offset := 0; let next_ = use_it_ fi; next_ enddef;

def recodeupper expr t =
  currenttitle:= t;
  if t = "Uppercase Greek Xi" : code_offset := ASCII"C" - oct"004"; 
  elseif t = "Uppercase Greek Delta" : code_offset := ASCII"D" - oct"001"; 
  elseif t = "Uppercase Greek Phi" : code_offset := ASCII"F" - oct"010"; 
  elseif t = "Uppercase Greek Gamma" : code_offset := ASCII"G" - oct"000"; 
  elseif t = "Uppercase Greek Lambda" : code_offset := ASCII"L" - oct"003"; 
  elseif t = "Uppercase Greek Pi" : code_offset := ASCII"P" - oct"005"; 
  elseif t = "Uppercase Greek Theta" : code_offset := ASCII"Q" - oct"002"; 
  elseif t = "Uppercase Greek Sigma" : code_offset := ASCII"S" - oct"006"; 
  elseif t = "Uppercase Greek Upsilon" : code_offset := ASCII"U" - oct"007"; 
  elseif t = "Uppercase Greek Omega" : code_offset := ASCII"W" - oct"012"; 
  elseif t = "Uppercase Greek Psi" : code_offset := ASCII"Y" - oct"011"; 
  else: code_offset := 0; fi; next_ enddef;

let cmchar = selectupper;
input romanu
let cmchar = recodeupper;
input greeku

code_offset := 0;

def selectkoppa expr t =
  currenttitle:= t;
  if t = 
    "Uppercase koppa" :    let next_ = use_it_
  else: let next_ = lose_it_ fi; next_ enddef;
let cmchar = selectkoppa;

input koppa4

let cmchar = relax;

